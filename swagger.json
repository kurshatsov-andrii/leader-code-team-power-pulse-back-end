{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Power-pulse",
    "description": "Power-pulse swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [{"url": "https://leader-code-team-power-pulse-back-end.onrender.com/"}, { "url": "http://localhost:3002" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
		 {
      "name": "Products",
      "description": "Products endpoints"
    },
		{
       "name": "Exercises",
       "description": "Exercises endpoints"
        },
		{
       "name": "Diary",
       "description": "Diary endpoints"
        }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],        
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
							"application/json": {
								"schema": {
								  "$ref": "#/components/schemas/ErrorResponse"
							}
						}
          }
        },
          "409": {
            "description": "Conflict (Email in use)",
            "content": {
							"application/json": {
								"schema": {
								  "$ref": "#/components/schemas/ErrorResponse"
								}
							 }
            }
          }
        }
      }
    },
		"/api/auth/login": {
			"post": {
				"tags": ["Auth"],
				"summary": "User login",
				"parameters": [],
				"requestBody": {
					"description": "Login object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "ОК",
						"content": {
						  "application/json": {
							 "schema": {
								"$ref": "#/components/schemas/LoginResponse"
							 }
						  }
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
								  "$ref": "#/components/schemas/ErrorResponse"
								}
							 }
						}						
					},
					"401": {
						"description": "Email or password is wrong",
						"content": {
							"application/json": {
								"schema": {
								  "$ref": "#/components/schemas/ErrorResponse"
								}
							 }
						}						
					}
				}
			}	
		},    
"/api/auth/current": {
			"get": {
				"tags": ["Auth"],
				"summary": "Current user",
				"description": "Endpoint for get current user information",
				"parameters": [],
				"security": [{ "Bearer": [] }],				
				"responses": {
				"200": {
						"description": "OK",
						"content": {
						  "application/json": {
							 "schema": {
								"$ref": "#/components/schemas/CurrentResponse"
							 }
						  }
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
								  "$ref": "#/components/schemas/ErrorResponse"
								}
							 }
						}
					}

				}
			}	
		},
		"/api/auth/logout": {
			"post": {
				"tags": ["Auth"],
				"summary": "User logout",
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"description": "Endpoint for logout current user",					
				"responses": {
				"200": {
						"description": "ОК",
						"content": {
						  "application/json": {
							 "schema": {
								"$ref": "#/components/schemas/LogoutResponse"
							 }
						  }
						}
					},

					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
								  "$ref": "#/components/schemas/ErrorResponse"
								}
							 }
						}
					}
					
				}
			}
		},
"/api/auth/profile": {
			"patch": {
				"tags": ["Auth"],
				"summary": "User update",
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"description": "Endpoint for user update",					
				"requestBody": {
					"description": "Profile object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ProfileRequest"
							}
						}
					}
				},				
				"responses": {
				"201": {
						"description": "Updated",
						"content": {
						  "application/json": {
							 "schema": {
								"$ref": "#/components/schemas/CurrentResponse"
							 }
						  }
						}
					},

					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
								  "$ref": "#/components/schemas/ErrorResponse"
								}
							 }
						}
					},
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }					
				}
			}
		},		
	"/api/auth/avatar": {
      "patch": {
        "tags": ["Auth"],
        "summary": "User update avatar",
        "description": "Endpoint for updating the user avatar",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User avatar",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "avatar": { "contentType": "image" }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
	},	
		"/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Return all products",
        "operationId": "getAllProducts",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 24
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Choose name of product",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recommended",
            "in": "query",
            "description": "Choose recommended or not recommended products",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },					
          {
            "name": "category",
            "in": "query",
            "description": "Choose category of products",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "alcoholic drinks",
                "berries",
                "cereals",
                "dairy",
                "dried fruits",
                "eggs",
                "fish",
                "flour",
                "fruits",
                "meat",
                "mushrooms",
                "nuts",
                "oils and fats",
                "poppy",
                "sausage",
                "seeds",
                "sesame",
                "soft drinks",
                "vegetables and herbs"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsResponse"
                }
              }
            }
          },

          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/category": {
      "get": {
        "tags": ["Products"],
        "summary": "Return all products categories",
        "operationId": "getProductsCategories",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsCategoriesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
		"/exercises": {
      "get": {
        "tags": ["Exercises"],
        "summary": "Return all exercises",
        "operationId": "getAllExercises",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllExercisesResponse"
                }
              }
            }
          },

          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },

"/exercises/{filter}": {
            "get": {
                "tags": [
                    "Exercises"
                ],
                "summary": "Return exercises categories",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [									
                    {
											"required": true,
                        "in": "path",
                        "name": "filter",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "body-part",
                                "muscles",
                                "equipment"
                            ]
                        },
                        "description": "Prefilter parameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExercisesResponse"
                                }
                            }
                        }
                    },
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
								  "$ref": "#/components/schemas/ErrorResponse"
								}
							 }
						}
					},
					"404": {
						"description": "Page not found",
						"content": {
							"application/json": {
								"schema": {
								  "$ref": "#/components/schemas/ErrorResponse"
								}
							 }
						}						
					}                }
            }
        },		
  
		"/getDiary": {
			"get": {
				"tags": ["Diary"],
				"summary": "Get added products",
				"security": [{ "Bearer": [] }],
				"parameters": [],
								"requestBody": {
					"description": "Diary object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DairyGetRequest"
							}
						}
					}
				},				
				"responses":{
					"200": {
						"description": "OK",
						"content": {
						  "application/json": {
							 "schema": {
								"$ref": "#/components/schemas/DiaryGetProductsResponse"
							 }
						   }
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
								  "$ref": "#/components/schemas/ErrorResponse"
								}
							 }
						}
					}

				}
			}
		}
	},	
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
					"name": {
						"type": "string",
						"description": "User name"
					},          
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "qwerty123"
          }
        }
      },
"RegistrationResponse": {
				"type": "object",
				"properties": {
					"user": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string",
								"description": "User name"
							},
							"email": {
								"type": "string",
								"description": "User email",
								"format": "email"
							}
						}	
					}
				}
			},     
			"LoginRequest": {
				"type": "object",
				"required": ["email", "password"],
				"properties": {
					"email": {
						"type": "string",
						"description": "User email",
						"format": "email"
					},
					"password": {
						"type": "string",
						"description": "User password",
						"example": "qwe123"
					}
				}
			},
			"LoginResponse": {
				"type": "object",
				"properties": {
					"token": {
						"type": "string",
						"description": "User token"
					},
					"email": {						
						"type": "string",
						"description": "User email",
						"format": "email"											
					}					 
				}
			},
"LogoutResponse": {
				"type": "object",
				"properties": {
					"message": {
						"type": "string",
						"description": "Message",
						"example": "Logout success"
					}
				}
			},			
			"CurrentResponse": {
				"type": "object",				
				"properties": {
				"_Id": {
        "type": "string",
        "example": "6540e173fcec8c3a63bbd7b4"
      },
					"name": {
						"type": "string",
						"description": "User name"
					},
					"email": {
						"type": "string",
						"description": "User email",
						"format": "email"
					},
 			"password": {
        "type": "string",
        "description": "User password",
        "example": "$2b$10$Sh95JUAJThmtGHH0BDcewe6I7ZORt1xMS.TN8V/nkU3L1UI81.Ua2"
      },					
			"height": {
            "type": "integer",
            "description": "User height",
            "example": 180
          },
          "currentWeight": {
            "type": "integer",
            "description": "User current weight",
            "example": 90
          },
          "desiredWeight": {
            "type": "integer",
            "description": "User desired weight",
            "example": 70
          },
          "birthday": {
            "type": "string",
            "description": "User birthday",
            "example": "1990-01-01T00:00:00.000Z"
          },
          "blood": {
            "type": "number",
            "description": "User blood type",
            "example": 1
          },
          "sex": {
            "type": "string",
            "description": "User sex",
            "example": "male"
          },
          "levelActivity": {
            "type": "number",
            "description": "User level activity",
            "example": 1
          },
				"bmr": {
        "type": "number",
        "description": "User BMR",
        "example": 2200
      },
    "token": {
        "type": "string",
        "description": "User token",
        "format": "token",
        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1M2QzYmM1MDY2NWEyZWZlNmU4YzhmMyIsImlhdCI6MTY5ODkxNjA2NCwiZXhwIjoxNjk4OTk4ODY0fQ.1sRQ0J4lbJHKmL9X2feV71DbiKTxab6J_nK2giFhURc"
      },    
		"createdAt": {
        "type": "string",
        "description": "Time when user was created at",
        "format": "Time",
        "example": "2023-10-22T18:43:34.175Z"
      },
    "updatedAt": {
        "type": "string",
        "description": "Time when user was created at",
        "format": "Time",
        "example": "2023-10-22T18:43:34.175Z"
      },
		"avatarURL": {
				"type": "string",
				"example": "https://res.cloudinary.com/dyhqa6el3/image/upload/v1705339824/avatars/mark.jpg"
					}     

				}
			},
			"ProfileRequest": {
				"type": "object",
				"required": ["name", "height", "currentWeight", "desiredWeight", "birthday", "blood", "sex", "levelActivity"],
				"properties": {
				"name": {
						"type": "string",
						"description": "User name"
					},          
				"height": {
            "type": "integer",
            "description": "User height",
            "example": 180
          },
          "currentWeight": {
            "type": "integer",
            "description": "User current weight",
            "example": 90
          },
          "desiredWeight": {
            "type": "integer",
            "description": "User desired weight",
            "example": 70
          },
          "birthday": {
            "type": "string",
            "description": "User birthday",
            "example": "1990-01-01T00:00:00.000Z"
          },
          "blood": {
            "type": "number",
            "description": "User blood type",
            "example": 1
          },
          "sex": {
            "type": "string",
            "description": "User sex",
            "example": "male"
          },
          "levelActivity": {
            "type": "number",
            "description": "User level activity",
            "example": 1
          }
				}
			},
			"AvatarResponse": {
        "type": "object",
				"description": "User avatar",
        "properties": {                                  
            "avatarURL": {
						"type": "string",
						"example": "https://res.cloudinary.com/dyhqa6el3/image/upload/v1705339824/avatars/mark.jpg"
					}      
          
        }
      },		
		"ProductsResponse": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
        					"example": "6540e173fcec8c3a63bbd7b4"
                },
                "weight": {
                  "type": "number",
        					"example": 100
                },
                "calories": {
 									"type": "integer",
        					"example": 225
                },
                "category": {
                  "type": "string",
        					"example": "flour"
                },
                "title": {
                  "type": "string",
        					"example": "Cedar flour"
                },
                "groupBloodNotAllowed": {
                  "type": "object",
        "properties": {
          "1": {
            "type": "boolean"
          },
          "2": {
            "type": "boolean"
          },
          "3": {
            "type": "boolean"
          },
          "4": {
            "type": "boolean"
          }
        }
                }
              }
            }
          },
          "page": {
            "type": "integer",
        		"example": 1
          },
          "limit": {
						"type": "integer",
        		"example": 24
          },
          "sum": {
            "type": "integer",
        		"example": 2621
          }
        }
      },

      "ProductsCategoriesResponse": {				
            "type": "array",
            "items": {
              "type": "object",
              "properties": {                     
                "_id": {
                  "type": "string",
        					"example": "6540e173fcec8c3a63bbd7b4"
                },
                "category": {
                  "type": "string",
        					"example": "fish"
                }          
             }
          }              			
      },	
"AllExercisesResponse": {
                "type": "object",
                "description": "Total count of elements in filtered collection",
                "properties": {
                    "length": {
                        "type": "integer"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "type": "string"
                                },
                                "bodyPart": {
                                    "type": "string"
                                },
                                "equipment": {
                                    "type": "string"
                                },
                                "gifUrl": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://ftp.goit.study/img/power-pulse/gifs/0009.gif"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "target": {
                                    "type": "string"
                                },
                              "burnedCalories": {
						                  "type": "integer",
        		          "example": 329
                          },
          "time": {
            "type": "integer",
        		"example": 3
          }

                            }
                        }
                    }
                }
            },      
"ExercisesResponse": {
                "type": "object",
                "description": "Total count of elements in filtered collection",
                "properties": {
                    "length": {
                        "type": "integer"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "type": "string"
                                },
                                "filter": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "imgURL": {
                                    "type": "string",
                                    "format": "uri",
"example": "https://ftp.goit.study/img/power-pulse/gifs/0009.gif"                                    
                                }
                            }
                        }
                    }
                }
            },            		
"DiaryGetProductsResponse": {				
					"type": "object",
					"properties": {
						"_id": {
							"type": "string",
							"description": "Body part id"
						},
						"owner": {
							"type": "string",
							"description": "Owner part id"
						},
						"date": {
							"type": "string",
							"description": "Date",
							"format": "date"
						},
						"consumedCalories": {
							"type": "string",
							"description": "Consumed Calories"
						},
						"burnedCalories": {
							"type": "string",
							"description": "Burned Calories"
						},
					"products": {
            "type": "array",
            "items": {
						}
					},
						"exercises": {
            "type": "array",
            "items": {
						}
					},
"createdAt": {
        "type": "string",
        "description": "Time when user was created at",
        "format": "Time",
        "example": "2023-10-22T18:43:34.175Z"
      },
    "updatedAt": {
        "type": "string",
        "description": "Time when user was created at",
        "format": "Time",
        "example": "2023-10-22T18:43:34.175Z"
      }					
					}				
			},	
			"DairyGetRequest": {
				"type": "object",
				"required": ["data"],
				"properties": {
					"data": {
						"type": "string",
						"description": "User data",
						"format": "date"
					}
				}
			},

			"ErrorResponse": {
				"type": "object",
				"properties": {
					"message": {
						"type": "string",
						"description": "Message"
					}
				}
			}			
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}